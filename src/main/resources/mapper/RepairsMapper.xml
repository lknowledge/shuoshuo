<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.dao.RepairsMapper">
  <resultMap id="BaseResultMap" type="com.community.bean.Repairs">
    <id column="repairs_id" jdbcType="INTEGER" property="repairsId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="linkmen" jdbcType="VARCHAR" property="linkmen" />
    <result column="linktelephone" jdbcType="VARCHAR" property="linktelephone" />
    <result column="malfunction" jdbcType="VARCHAR" property="malfunction" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="fee" jdbcType="VARCHAR" property="fee" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    repairs_id, address, linkmen, linktelephone, malfunction, state, fee
  </sql>
  <select id="selectByExample" parameterType="com.community.bean.RepairsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rq_repairs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rq_repairs
    where repairs_id = #{repairsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rq_repairs
    where repairs_id = #{repairsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.community.bean.RepairsExample">
    delete from rq_repairs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.community.bean.Repairs">
    insert into rq_repairs (repairs_id, address, linkmen, 
      linktelephone, malfunction, state, 
      fee)
    values (#{repairsId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{linkmen,jdbcType=VARCHAR}, 
      #{linktelephone,jdbcType=VARCHAR}, #{malfunction,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{fee,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.community.bean.Repairs">
    insert into rq_repairs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="repairsId != null">
        repairs_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="linkmen != null">
        linkmen,
      </if>
      <if test="linktelephone != null">
        linktelephone,
      </if>
      <if test="malfunction != null">
        malfunction,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="fee != null">
        fee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="repairsId != null">
        #{repairsId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="linkmen != null">
        #{linkmen,jdbcType=VARCHAR},
      </if>
      <if test="linktelephone != null">
        #{linktelephone,jdbcType=VARCHAR},
      </if>
      <if test="malfunction != null">
        #{malfunction,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.community.bean.RepairsExample" resultType="java.lang.Long">
    select count(*) from rq_repairs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rq_repairs
    <set>
      <if test="record.repairsId != null">
        repairs_id = #{record.repairsId,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.linkmen != null">
        linkmen = #{record.linkmen,jdbcType=VARCHAR},
      </if>
      <if test="record.linktelephone != null">
        linktelephone = #{record.linktelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.malfunction != null">
        malfunction = #{record.malfunction,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rq_repairs
    set repairs_id = #{record.repairsId,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      linkmen = #{record.linkmen,jdbcType=VARCHAR},
      linktelephone = #{record.linktelephone,jdbcType=VARCHAR},
      malfunction = #{record.malfunction,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      fee = #{record.fee,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.community.bean.Repairs">
    update rq_repairs
    <set>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="linkmen != null">
        linkmen = #{linkmen,jdbcType=VARCHAR},
      </if>
      <if test="linktelephone != null">
        linktelephone = #{linktelephone,jdbcType=VARCHAR},
      </if>
      <if test="malfunction != null">
        malfunction = #{malfunction,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=VARCHAR},
      </if>
    </set>
    where repairs_id = #{repairsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.community.bean.Repairs">
    update rq_repairs
    set address = #{address,jdbcType=VARCHAR},
      linkmen = #{linkmen,jdbcType=VARCHAR},
      linktelephone = #{linktelephone,jdbcType=VARCHAR},
      malfunction = #{malfunction,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      fee = #{fee,jdbcType=VARCHAR}
    where repairs_id = #{repairsId,jdbcType=INTEGER}
  </update>
</mapper>