<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.dao.HouseMapper">
  <resultMap id="BaseResultMap" type="com.community.bean.House">
    <id column="house_id" jdbcType="INTEGER" property="houseId" />
    <result column="building" jdbcType="INTEGER" property="building" />
    <result column="floor" jdbcType="INTEGER" property="floor" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="area" jdbcType="INTEGER" property="area" />
    <result column="statement" jdbcType="VARCHAR" property="statement" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    house_id, building, floor, number, type, area, statement
  </sql>
  <select id="selectByExample" parameterType="com.community.bean.HouseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rq_house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rq_house
    where house_id = #{houseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rq_house
    where house_id = #{houseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.community.bean.HouseExample">
    delete from rq_house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.community.bean.House">
    insert into rq_house (house_id, building, floor, 
      number, type, area, 
      statement)
    values (#{houseId,jdbcType=INTEGER}, #{building,jdbcType=INTEGER}, #{floor,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{area,jdbcType=INTEGER}, 
      #{statement,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.community.bean.House">
    insert into rq_house
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="houseId != null">
        house_id,
      </if>
      <if test="building != null">
        building,
      </if>
      <if test="floor != null">
        floor,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="statement != null">
        statement,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="houseId != null">
        #{houseId,jdbcType=INTEGER},
      </if>
      <if test="building != null">
        #{building,jdbcType=INTEGER},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=INTEGER},
      </if>
      <if test="statement != null">
        #{statement,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.community.bean.HouseExample" resultType="java.lang.Long">
    select count(*) from rq_house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rq_house
    <set>
      <if test="record.houseId != null">
        house_id = #{record.houseId,jdbcType=INTEGER},
      </if>
      <if test="record.building != null">
        building = #{record.building,jdbcType=INTEGER},
      </if>
      <if test="record.floor != null">
        floor = #{record.floor,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=INTEGER},
      </if>
      <if test="record.statement != null">
        statement = #{record.statement,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rq_house
    set house_id = #{record.houseId,jdbcType=INTEGER},
      building = #{record.building,jdbcType=INTEGER},
      floor = #{record.floor,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=INTEGER},
      statement = #{record.statement,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.community.bean.House">
    update rq_house
    <set>
      <if test="building != null">
        building = #{building,jdbcType=INTEGER},
      </if>
      <if test="floor != null">
        floor = #{floor,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=INTEGER},
      </if>
      <if test="statement != null">
        statement = #{statement,jdbcType=VARCHAR},
      </if>
    </set>
    where house_id = #{houseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.community.bean.House">
    update rq_house
    set building = #{building,jdbcType=INTEGER},
      floor = #{floor,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      area = #{area,jdbcType=INTEGER},
      statement = #{statement,jdbcType=VARCHAR}
    where house_id = #{houseId,jdbcType=INTEGER}
  </update>
</mapper>